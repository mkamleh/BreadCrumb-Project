{"ast":null,"code":"const http = require(\"http\");\nconst fakeApI = new FakeAPI();\nconst server = http.createServer((req, res) => {\n  res = fakeApI(req);\n});\nserver.listen(3002);\nclass FakeAPI {\n  constructor() {\n    this.root2 = `{\n        \"type\": \"dir\",\n        \"children\": {\n          \"home\": {\n            \"type\": \"dir\",\n            \"children\": {\n              \"myname\": {\n                \"type\": \"dir\",\n                \"children\": {\n                  \"filea/txt\": {\n                    \"type\": \"file\"\n                  },\n                  \"fileb/txt\": {\n                    \"type\": \"file\"\n                  },\n                  \"projects\": {\n                    \"type\": \"dir\",\n                    \"children\": {\n                      \"mysupersecretproject\": {\n                        \"type\": \"dir\",\n                        \"children\": {\n                          \"mysupersecretfile\": {\n                            \"type\": \"file\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`;\n    this.s = JSON.parse(this.root2);\n    this.access = (path, object) => {\n      return path.split('.').reduce((o, i) => o[i], object);\n    };\n    this.fakeApI = link => {\n      var myDataresult = this.access(link, this.s);\n      var myData = Object.keys(myDataresult).map(key => {\n        return {\n          type: myDataresult[key].type,\n          key\n        };\n      });\n      return myData;\n    };\n  }\n}\nexport default FakeAPI;","map":{"version":3,"names":["http","require","fakeApI","FakeAPI","server","createServer","req","res","listen","root2","s","JSON","parse","access","path","object","split","reduce","o","i","link","myDataresult","myData","Object","keys","map","key","type"],"sources":["/Users/mohdkamleh/Desktop/Breadcrumbs/breadcrumbs/src/FakeApi.js"],"sourcesContent":["const http = require(\"http\")\nconst fakeApI = new FakeAPI()\n\nconst server = http.createServer( (req,res) => {\n  res = fakeApI(req)\n} )\n\nserver.listen(3002)\n\n\nclass FakeAPI{\n\n    root2 = `{\n        \"type\": \"dir\",\n        \"children\": {\n          \"home\": {\n            \"type\": \"dir\",\n            \"children\": {\n              \"myname\": {\n                \"type\": \"dir\",\n                \"children\": {\n                  \"filea/txt\": {\n                    \"type\": \"file\"\n                  },\n                  \"fileb/txt\": {\n                    \"type\": \"file\"\n                  },\n                  \"projects\": {\n                    \"type\": \"dir\",\n                    \"children\": {\n                      \"mysupersecretproject\": {\n                        \"type\": \"dir\",\n                        \"children\": {\n                          \"mysupersecretfile\": {\n                            \"type\": \"file\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`\n    \n    \n\n        \n    \n     s = JSON.parse(this.root2)\n\n     access = (path, object) => {\n        return path.split('.').reduce((o, i) => o[i], object)\n    }\n\n    fakeApI = (link) => {\n        var myDataresult = this.access(link,this.s)\n        var myData = Object.keys(myDataresult).map(key => {\n          return {type: myDataresult[key].type ,key};\n      })\n      return myData\n      }\n}\n\nexport default FakeAPI\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,OAAO,GAAG,IAAIC,OAAO,EAAE;AAE7B,MAAMC,MAAM,GAAGJ,IAAI,CAACK,YAAY,CAAE,CAACC,GAAG,EAACC,GAAG,KAAK;EAC7CA,GAAG,GAAGL,OAAO,CAACI,GAAG,CAAC;AACpB,CAAC,CAAE;AAEHF,MAAM,CAACI,MAAM,CAAC,IAAI,CAAC;AAGnB,MAAML,OAAO;EAAA;IAAA,KAETM,KAAK,GAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;IAAA,KAMHC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,KAAK,CAAC;IAAA,KAE1BI,MAAM,GAAG,CAACC,IAAI,EAAEC,MAAM,KAAK;MACxB,OAAOD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACC,CAAC,CAAC,EAAEJ,MAAM,CAAC;IACzD,CAAC;IAAA,KAEDb,OAAO,GAAIkB,IAAI,IAAK;MAChB,IAAIC,YAAY,GAAG,IAAI,CAACR,MAAM,CAACO,IAAI,EAAC,IAAI,CAACV,CAAC,CAAC;MAC3C,IAAIY,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,YAAY,CAAC,CAACI,GAAG,CAACC,GAAG,IAAI;QAChD,OAAO;UAACC,IAAI,EAAEN,YAAY,CAACK,GAAG,CAAC,CAACC,IAAI;UAAED;QAAG,CAAC;MAC9C,CAAC,CAAC;MACF,OAAOJ,MAAM;IACb,CAAC;EAAA;AACP;AAEA,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}