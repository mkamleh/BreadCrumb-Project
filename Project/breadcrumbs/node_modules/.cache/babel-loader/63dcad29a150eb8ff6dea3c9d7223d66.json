{"ast":null,"code":"var _jsxFileName = \"/Users/mohdkamleh/Desktop/Breadcrumbs/breadcrumbs/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from \"react\";\nimport BreadCrumb from \"./components/BreadCrumb/BreadCrumb\";\nimport { useSelector } from \"react-redux\";\nimport Directories from \"./components/Directories/Directories\";\nimport File from \"./components/Directories/File/File\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //getting redux state\n  const state = useSelector(state => state);\n  const [myData, setMyData] = useState([]);\n  const isPage = state.isPage;\n  const link = state.link;\n\n  //function to fetch directory array after providing the right link\n  //setting received data to mydate state variable\n  const fetchData = async link => {\n    try {\n      const res = await fetch(link);\n      const json = await res.json();\n      setMyData(json);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //use effect hooked to call whne item is mounted and on link change\n  useEffect(() => {\n    fetchData(`http://localhost:3001/path/${link}`);\n  }, [link]);\n\n  //return breadcrumb component and directiory component \n  //file component represents open file\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      className: \"breadCrumbs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !isPage ? /*#__PURE__*/_jsxDEV(Directories, {\n      myData: myData,\n      className: \"directlyOptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(File, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 80\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R4s8pzg6+9F+R2X7mi+aYqwlvXc=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BreadCrumb","useSelector","Directories","File","useState","useEffect","App","state","myData","setMyData","isPage","link","fetchData","res","fetch","json","e","console","log"],"sources":["/Users/mohdkamleh/Desktop/Breadcrumbs/breadcrumbs/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\";\nimport BreadCrumb from \"./components/BreadCrumb/BreadCrumb\";\nimport {useSelector} from \"react-redux\";\nimport Directories from \"./components/Directories/Directories\"\nimport File from \"./components/Directories/File/File\"\nimport {useState,useEffect} from \"react\";\n  \nfunction App() {\n  //getting redux state\n  const state = useSelector(state => state)\n  const [myData, setMyData] = useState([])\n  const isPage = state.isPage\n  const link = state.link\n\n  //function to fetch directory array after providing the right link\n  //setting received data to mydate state variable\n  const fetchData = async (link) => {\n    try{\n      const res = await fetch(link);\n      const json = await res.json()\n      setMyData(json)\n    }catch(e){\n      console.log(e)\n    }\n    \n  }\n  \n  //use effect hooked to call whne item is mounted and on link change\n  useEffect(() => {\n    fetchData(`http://localhost:3001/path/${link}`)\n  },[link])\n\n  //return breadcrumb component and directiory component \n  //file component represents open file\n  return (\n    <React.Fragment>\n      <BreadCrumb className = \"breadCrumbs\" />\n    { !isPage ? <Directories myData= {myData} className=\"directlyOptions\"/> :  <File/>}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAAQC,WAAW,QAAO,aAAa;AACvC,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,IAAI,MAAM,oCAAoC;AACrD,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAMC,KAAK,GAAGN,WAAW,CAACM,KAAK,IAAIA,KAAK,CAAC;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMM,MAAM,GAAGH,KAAK,CAACG,MAAM;EAC3B,MAAMC,IAAI,GAAGJ,KAAK,CAACI,IAAI;;EAEvB;EACA;EACA,MAAMC,SAAS,GAAG,MAAOD,IAAI,IAAK;IAChC,IAAG;MACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACH,IAAI,CAAC;MAC7B,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;MAC7BN,SAAS,CAACM,IAAI,CAAC;IACjB,CAAC,QAAMC,CAAC,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EAEF,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdO,SAAS,CAAE,8BAA6BD,IAAK,EAAC,CAAC;EACjD,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;;EAET;EACA;EACA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,UAAU;MAAC,SAAS,EAAG;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,EACxC,CAACD,MAAM,gBAAG,QAAC,WAAW;MAAC,MAAM,EAAGF,MAAO;MAAC,SAAS,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAE,gBAAI,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAErB;AAAC,GAjCQF,GAAG;EAAA,QAEIL,WAAW;AAAA;AAAA,KAFlBK,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}