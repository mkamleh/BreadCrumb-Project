{"ast":null,"code":"var _jsxFileName = \"/Users/mohdkamleh/Desktop/Breadcrumbs/breadcrumbs/src/components/Directories/Directories.js\";\nimport Folder from \"./Folder/Folder\";\nimport FileFolder from \"./FileFolder/FileFolder\";\nimport \"./Directories.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Directories = props => {\n  return (\n    /*#__PURE__*/\n    //go through childrens of last path item in breadcrumbs and return folder or file component\n    //depending on item type\n    //chidldrens elements are passed from app.js as props\n    _jsxDEV(\"div\", {\n      className: \"directories\",\n      children: props.myData.map((item, idx) => {\n        return item.type === \"dir\" ? /*#__PURE__*/_jsxDEV(Folder, {\n          type: item.type,\n          name: item.key\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(FileFolder, {\n          type: item.type,\n          name: item.key\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 103\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Directories;\nexport default Directories;\nvar _c;\n$RefreshReg$(_c, \"Directories\");","map":{"version":3,"names":["Folder","FileFolder","Directories","props","myData","map","item","idx","type","key"],"sources":["/Users/mohdkamleh/Desktop/Breadcrumbs/breadcrumbs/src/components/Directories/Directories.js"],"sourcesContent":["\nimport Folder from \"./Folder/Folder\";\nimport FileFolder from \"./FileFolder/FileFolder\"\nimport \"./Directories.css\";\nconst Directories =  (props) => {\n    \n\n    return (\n        //go through childrens of last path item in breadcrumbs and return folder or file component\n        //depending on item type\n        //chidldrens elements are passed from app.js as props\n        <div className=\"directories\">\n        {props.myData.map( (item,idx) => { \n            return  item.type === \"dir\" ? <Folder key = {idx}  type = {item.type} name={item.key}/> : <FileFolder key = {idx} type= {item.type} name={item.key}/> \n        })}\n        </div>\n    );\n\n}\n\n\nexport default Directories"],"mappings":";AACA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,mBAAmB;AAAC;AAC3B,MAAMC,WAAW,GAAKC,KAAK,IAAK;EAG5B;IAAA;IACI;IACA;IACA;IACA;MAAK,SAAS,EAAC,aAAa;MAAA,UAC3BA,KAAK,CAACC,MAAM,CAACC,GAAG,CAAE,CAACC,IAAI,EAACC,GAAG,KAAK;QAC7B,OAAQD,IAAI,CAACE,IAAI,KAAK,KAAK,gBAAG,QAAC,MAAM;UAAc,IAAI,EAAIF,IAAI,CAACE,IAAK;UAAC,IAAI,EAAEF,IAAI,CAACG;QAAI,GAAxCF,GAAG;UAAA;UAAA;UAAA;QAAA,QAAuC,gBAAG,QAAC,UAAU;UAAa,IAAI,EAAGD,IAAI,CAACE,IAAK;UAAC,IAAI,EAAEF,IAAI,CAACG;QAAI,GAAtCF,GAAG;UAAA;UAAA;UAAA;QAAA,QAAqC;MACzJ,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACI;AAGd,CAAC;AAAA,KAdKL,WAAW;AAiBjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}